/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package hattmakarna;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Mohammed
 */
public class ÄndraPrisPåHattar extends javax.swing.JFrame {
    
    private static InfDB idb;
    /**
     * Creates new form ÄndraPrisPåHattar
     */
    public ÄndraPrisPåHattar(InfDB idb) {
        this.idb = idb;
        initComponents();
        loadData();
    }
    
    private void loadData(){
        
        String sqlfråga = "SELECT * FROM produkt";
        
        ArrayList<HashMap<String, String>> produktLista = new ArrayList<>(); 
        
        try{
            produktLista = idb.fetchRows(sqlfråga);
        } catch (InfException e){
            JOptionPane.showMessageDialog(this, "Fel vid hämtning av produkter från databasen" + e.getMessage());
        }
        
        for (HashMap<String, String> rad : produktLista){
            
            String specialbest = rad.get("Sepcialbeställning");
            String flaggad = rad.get("Flaggad");
            
            if (specialbest == null){
                specialbest = "Nej";
            }
            else if (specialbest.equals("1")){
                specialbest = "Ja";
            } else{
                specialbest = "Nej";
            }
            
            if (flaggad == null){
                flaggad = "Nej";
            }
            else if (flaggad.equals("1")){
                flaggad = "Ja";
            } else {
                flaggad = "Nej";
            }
            
            ((DefaultTableModel) tblHattar.getModel()).addRow(new Object[]{rad.get("ProduktID"), rad.get("Namn"), rad.get("pris"), specialbest, flaggad, rad.get("bild"), rad.get("beskrivning")});
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHattar = new javax.swing.JTable();
        btnUppdatera = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Uppdatera hattar");

        tblHattar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProduktID", "Namn", "Pris", "Specialbeställning", "Flaggad", "Bild", "Beskrivning"
            }
        ));
        jScrollPane1.setViewportView(tblHattar);

        btnUppdatera.setText("Uppdatera");
        btnUppdatera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUppdateraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnUppdatera)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(btnUppdatera)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUppdateraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUppdateraActionPerformed
        // TODO add your handling code here:
         int row = tblHattar.getSelectedRow();
    if (row != -1) {
        String namn = (String) tblHattar.getValueAt(row, 1);
        String pris = (String) tblHattar.getValueAt(row, 2);
        String specialbest = (String) tblHattar.getValueAt(row, 3);
        String flaggad = (String) tblHattar.getValueAt(row, 4);
        String bild = (String) tblHattar.getValueAt(row, 5);
        String beskrivning = (String) tblHattar.getValueAt(row, 6);
        String pid = (String) tblHattar.getValueAt(row, 0);
        
        // Efter att du läst in värden från tabellen
if (namn == null) namn = "";
if (pris == null) pris = "";
if (specialbest == null) specialbest = "";
if (flaggad == null) flaggad = "";
if (bild == null) bild = "";
if (beskrivning == null) beskrivning = "";


        
        
        if (!validering.isNumerisk(pris)){
            JOptionPane.showMessageDialog(this, "Priset får endast bestå av siffror och inte vara tomt.");
        }
        if (!validering.isValidNamn(namn)){
            JOptionPane.showMessageDialog(this, "Namnet får endast bestå av bokstäver");
        }
        if (!specialbest.equalsIgnoreCase("ja") && !specialbest.equalsIgnoreCase("nej")){
            JOptionPane.showMessageDialog(this, "Specialbeställning får endast innehålla 'Ja' eller 'Nej'");
        }
        
        if (!flaggad.equalsIgnoreCase("ja") && !flaggad.equalsIgnoreCase("nej")){
            JOptionPane.showMessageDialog(this, "Flaggad får endast innehålla 'Ja' eller 'Nej'");
        }
        
                if (flaggad.equalsIgnoreCase("Ja")){
            flaggad = "1";
        } else {
            flaggad = "0";
        }
        if (specialbest.equalsIgnoreCase("Ja")){
            specialbest = "1";
        } else {
            specialbest = "0";
        }
        
        
        String updateProdukt = "UPDATE produkt SET Namn = '" + namn + "', pris = '" + pris + "', Specialbeställning = '" +
                specialbest + "', Flaggad = '" + flaggad + "', bild = '" + bild + "', beskrivning = '" + beskrivning + "' WHERE ProduktID = '" + pid + "'";
        
        try{
            idb.update(updateProdukt);
            ((DefaultTableModel) tblHattar.getModel()).setRowCount(0);
            loadData();
        } catch (InfException e){
            JOptionPane.showMessageDialog(this, "Problem med att uppdatera databasen:" + e.getMessage());
    }
    }
    
    }//GEN-LAST:event_btnUppdateraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ÄndraPrisPåHattar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ÄndraPrisPåHattar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ÄndraPrisPåHattar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ÄndraPrisPåHattar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ÄndraPrisPåHattar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUppdatera;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHattar;
    // End of variables declaration//GEN-END:variables
}
