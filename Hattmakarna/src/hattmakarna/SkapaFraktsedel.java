/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hattmakarna;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.HashMap;
import java.util.ArrayList;
/**
 *
 * @author Mohammed
 */
public class SkapaFraktsedel extends javax.swing.JFrame {

    private static InfDB idb;
    /**
     * Creates new form SkapaFraktsedel
     */
    public SkapaFraktsedel(InfDB idb) {
        initComponents();
        this.idb = idb;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfAvsändare = new javax.swing.JTextField();
        tfOID = new javax.swing.JTextField();
        tfVikt = new javax.swing.JTextField();
        tfAdress = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        taBeskrivning = new javax.swing.JTextArea();
        lblFelmed = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        tfMottagare = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Skapa Fraktsedel Meny");

        jLabel2.setText("Avsändare");

        jLabel3.setText("Adress");

        jLabel4.setText("Vikt");

        jLabel5.setText("Order ID");

        jLabel6.setText("Beskrivning");

        tfAdress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAdressActionPerformed(evt);
            }
        });

        taBeskrivning.setColumns(20);
        taBeskrivning.setRows(5);
        jScrollPane1.setViewportView(taBeskrivning);

        jButton1.setText("Skapa");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Mottagare");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(54, 54, 54))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblFelmed))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfMottagare, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                .addComponent(tfAdress, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tfAvsändare, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tfVikt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tfOID, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfAvsändare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfVikt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfOID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfMottagare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFelmed))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfAdressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAdressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAdressActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        // Hämta info
        
        // Textfields
        String avsändare = tfAvsändare.getText();
        String adress = tfAdress.getText();
        String vikt = tfVikt.getText();
        String OID = tfOID.getText();
        String mottagare = tfMottagare.getText();
        String beskrivning = taBeskrivning.getText();
        
        // Mottagare 
        // Lägg in validering av namn:
        if (!validering.isValidNamn(mottagare))
        {
            lblFelmed.setText("Mottagare måste vara ett för och efternamn sepererat med mellanrum.");
            return;
        }
        
        String[] namn = mottagare.split(" ", 2);
        
        String förnamn = namn[0];
        String efternamn = namn[1];
        
        // Hämta kundid
        String getKundID = "SELECT kundid FROM kund WHERE förnamn = '" + förnamn + "' and efternamn = "
                + "'" + efternamn + "'";
        String dbKundId = null;
        try{
            dbKundId = idb.fetchSingle(getKundID);
        } catch (InfException e){
            lblFelmed.setText("Problem med att hämta kund id från databasen.");
        }
        
        if (dbKundId == null){
            lblFelmed.setText("Mottagare kundes inte hittas. Försök igen.");
            return;
        }
        
        // Hämta pris:
        
        // Hämta antalet med OID genom 
        // Order till försäljning för antalet:
        // Order till försäljning till produkt för styck priset
        // Behöver räkna ut för varje enskild vara t.ex. 200 studenthattar
        // sen addera alla dessa ihop
        
        ArrayList<HashMap<String, String>> produktAntal = null;
        
        String getProduktAntal = "SELECT produktid, antal FROM försäljning "
                + "WHERE oid = '" + OID + "'";
        
        try{
            produktAntal = idb.fetchRows(getProduktAntal);
        } catch (InfException e){
            lblFelmed.setText("Problem med att hämta produkters antal från databasen.");
        }
        
        // Hämta prislista för produkterna    med pris och antal 
        
        ArrayList<double[]> prisAntal = new ArrayList<>();
        
        for (HashMap<String, String> row : produktAntal){
            String pid = row.get("ProduktID"); 
            String antal = row.get("antal");
            
            String getPris = "SELECT pris FROM produkt WHERE produktid "
                    + "= '" + pid + "'";
            String dbPris = null;
            try{
                dbPris = idb.fetchSingle(getPris);
            } catch (InfException e){
                lblFelmed.setText("Problem med att hämta priset för produkterna.");
            }
            
            if (dbPris == null){
                lblFelmed.setText("Pris för produkter saknas. Kan inte räkna totala priset.");
                return;
            }
            double d_antal = Double.parseDouble(antal);
            double d_pris = Double.parseDouble(dbPris);
            
            prisAntal.add(new double[] {d_antal, d_pris}); // Borde inte vara en hashmap
            
        }
        
        double summa = 0;
        
        for(double[] par : prisAntal){
            summa += par[0] * par[1];
        }
        
        // Inserta in i databasen
        
        String insertQuery = "INSERT INTO frakt (avsändare, adress, vikt, beskrivning, mottagare, pris, oid)"
                + "values( '" + avsändare + "','" + adress + "','" +
                vikt + "','" + beskrivning + "','" + dbKundId + "','" + 
                summa + "','" + OID + "')";
        
        try{
            idb.insert(insertQuery);
            lblFelmed.setText("Frakt tillagd!");
        } catch (InfException e){
            lblFelmed.setText("Problem med att lägga till frakten i databasen.");
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SkapaFraktsedel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SkapaFraktsedel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SkapaFraktsedel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SkapaFraktsedel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new SkapaFraktsedel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFelmed;
    private javax.swing.JTextArea taBeskrivning;
    private javax.swing.JTextField tfAdress;
    private javax.swing.JTextField tfAvsändare;
    private javax.swing.JTextField tfMottagare;
    private javax.swing.JTextField tfOID;
    private javax.swing.JTextField tfVikt;
    // End of variables declaration//GEN-END:variables
}
