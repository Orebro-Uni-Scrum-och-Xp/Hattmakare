/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hattmakarna;
import javax.swing.JOptionPane;
import java.awt.event.ActionEvent;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author alexa
 */
public class SökaEfterKund extends javax.swing.JFrame {
    private InfDB idb;


    /**
     * Creates new form SökaEfterKund
     */
    public SökaEfterKund(InfDB idb) {
        initComponents();
        this.idb = idb;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfPnr = new javax.swing.JTextField();
        btnSökEfterKund = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();

        jScrollPane1.setViewportView(jTree1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable3);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable4);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Förnamn", "Efternamn", "Adress", "OrderID", "Status", "Datum"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Söka Efter Kund");

        jLabel2.setText("Kundens Personnummer:");

        tfPnr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPnrActionPerformed(evt);
            }
        });

        btnSökEfterKund.setText("Sök efter kund");
        btnSökEfterKund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSökEfterKundActionPerformed(evt);
            }
        });

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Kund ID", "Förnamn", "Efternamn", "Adress", "Email", "Telefonnummer", "Personnummer", "OID", "Status", "Datum", "Express"
            }
        ));
        jScrollPane6.setViewportView(jTable5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(tfPnr, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSökEfterKund)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1067, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfPnr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSökEfterKund))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfPnrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPnrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPnrActionPerformed

    private void btnSökEfterKundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSökEfterKundActionPerformed
    String personnummer = tfPnr.getText(); //hämtar personnummer från tf
    
    if (personnummer.isEmpty()){
        JOptionPane.showMessageDialog(this, "Fyll i ett Personnummer.");
        return;
    }
    
    try {
        String KundID = idb.fetchSingle("SELECT  KundID FROM Kund WHERE Personnummer = '" + personnummer + "'");
        
    if (KundID == null){
        JOptionPane.showMessageDialog(this, "Ingen kund hittades med det personnummret.");
        return;
    }
    // Hämta kundinfo
        HashMap<String, String> kundInfo = idb.fetchRow("SELECT KundID, Förnamn, Efternamn, Adress, Email, Telefonnummer, personnummer FROM Kund WHERE personnummer = '" + personnummer + "'");
        String kundID = kundInfo.get("KundID");
        String fornamn = kundInfo.get("Förnamn");
        String efternamn = kundInfo.get("Efternamn");
        String adress = kundInfo.get("Adress");
        String email = kundInfo.get("Email");
        String telefonnummer = kundInfo.get("Telefonnummer");
        String personnummerStr = kundInfo.get("personnummer"); //sparar kundinfo i lokala variabler 
        

        // Hämta ordrar som tillhör kunden
        
        ArrayList<HashMap<String, String>> orderLista = idb.fetchRows("SELECT OID, Status, Datum, CAST(Express AS CHAR) AS Express FROM Ordrar WHERE KundID = " + KundID);
        // Skapa tabellmodell
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("KundID");
        model.addColumn("Förnamn");
        model.addColumn("Efternamn");
        model.addColumn("Adress");
        model.addColumn("Email");
        model.addColumn("Telefonnummer");
        model.addColumn("Personnummer");
        model.addColumn("OrderID");
        model.addColumn("Status");
        model.addColumn("Datum");
        model.addColumn("Express");
       // Lägg till varje orderrad
        
      for (HashMap<String, String> rad : orderLista) { 
    String oid = rad.get("OID");
    String status = rad.get("Status");
    String datum = rad.get("Datum");
    String express = rad.get("Express");
    
    System.out.println("Express (rått): '" + express + "' (klass: " + (express != null ? express.getClass().getName() : "null") + ")"); //debug utskrift
    
   if (express == null) {
    express = "okänt"; //om värdet saknas
} else {
    String val = express.trim();
    if (val.equals("1") || val.equalsIgnoreCase("true") || val.equals("1.0")) {
        express = "Ja"; //onmvandlar till ja
    } else if (val.equals("0") || val.equalsIgnoreCase("false") || val.equals("0.0")) {
        express = "Nej"; //omvandlar till nej 
    } else {
        express = "okänt"; 
    }
}

    model.addRow(new Object[]{
        kundID, fornamn, efternamn, adress,
        email, telefonnummer, personnummerStr,
        oid, status, datum, express
    }); //lägger till en rad i tabellen för varje order
}

// 💥 Viktigt: koppla modellen till tabellen
jTable5.setModel(model);
    }
  
    catch (InfException e) {
        JOptionPane.showMessageDialog(this, "Ett fel inträffade: " + e.getMessage());
    }
    
    
    
    
    
    
    
    }//GEN-LAST:event_btnSökEfterKundActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SökaEfterKund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SökaEfterKund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SökaEfterKund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SökaEfterKund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSökEfterKund;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTree jTree1;
    private javax.swing.JTextField tfPnr;
    // End of variables declaration//GEN-END:variables
}
