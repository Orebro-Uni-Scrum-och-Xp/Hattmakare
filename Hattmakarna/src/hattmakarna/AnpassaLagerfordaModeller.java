/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


package hattmakarna;

import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;



/**
 *
 * @author Tyson
 */
public class AnpassaLagerfordaModeller extends javax.swing.JFrame {


    //En map för att hålla namn på modeller och deras ID
    private Map<String, String> modellIdMap = new HashMap<>();
    private InfDB idb;
    /**
     * Creates new form AnpassaLagerfordaModeller
     */
    //konstruktor 
    public AnpassaLagerfordaModeller(InfDB idb) {
        initComponents();
        this.idb = idb;
        //fyll comboboxen med modeller från databasen
        fyllModellerDropdown();
    }

    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboModeller = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        tfKundID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfNyBeskrivning = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfPris = new javax.swing.JTextField();
        btnAnpassa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Välj modell:");

        comboModeller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboModellerActionPerformed(evt);
            }
        });

        jLabel2.setText("Kund ID:");

        jLabel3.setText("Ny beskrivning på produkt:");

        tfNyBeskrivning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNyBeskrivningActionPerformed(evt);
            }
        });

        jLabel4.setText("Nytt pris:");

        btnAnpassa.setText("Anpassa modell");
        btnAnpassa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnpassaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfPris, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfKundID, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboModeller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38)
                        .addComponent(btnAnpassa, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel3)
                        .addGap(36, 36, 36)
                        .addComponent(tfNyBeskrivning, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfKundID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboModeller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfNyBeskrivning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPris, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btnAnpassa, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(135, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void comboModellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboModellerActionPerformed
        // TODO add your handling code here:
    }   
    //fyller comboboxen med modeller som finns i lagret
    private void fyllModellerDropdown(){
        try {
            //lägger till en standardpost i dropdownmenyn
            comboModeller.addItem("-- Välj modell --");

            //hämtar alla LagerfördID från LagerfördaHattar-tabellen
            ArrayList<String> rader = idb.fetchColumn("SELECT LagerfördID FROM LagerfördaHattar");

            
            //loopar genom varje LagerfördID och hämtar motsvarande produktnamn
            for (String lagerID : rader){
               
                //skapar visningsnamn, därefter sparas i hashmap, därefter lägger till visningsnamnet i dropdown
                String namn = idb.fetchSingle("SELECT Namn FROM Produkt WHERE ProduktID = " + "(SELECT ProduktID FROM LagerfördaHattar WHERE LagerfördID = " + lagerID + ")");
                String visningsnamn = namn + " (ID: " + lagerID + ")";
                modellIdMap.put(visningsnamn, lagerID);
                comboModeller.addItem(visningsnamn);
}
} catch (InfException e) {
    //visar felmeddelande
    JOptionPane.showMessageDialog(this, "Kunde inte hämta modeller: " + e.getMessage());

}
    }//GEN-LAST:event_comboModellerActionPerformed

    private void btnAnpassaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnpassaActionPerformed
               // TODO add your handling code here:
               try{
                   //hämtarvald modell från comboboxen, också modellens produktID från vår HashMap 
                   String valdModell = (String) comboModeller.getSelectedItem();
                   String produktID = modellIdMap.get(valdModell);
                
                   //hämtar inmatat nytt namn och pris från textfält
                   String nyttNamn = tfNyBeskrivning.getText().trim();
                   String nyttPrisStr = tfPris.getText().trim();
                   
                   
                   //validerar att båda fälten är ifyllda
                   if (nyttNamn.isEmpty() || nyttPrisStr.isEmpty()){
                       JOptionPane.showMessageDialog(null, "Fyll i både namn och pris.");
                       return;
                }
                   
                   double nyttPris;
                   try{ 
                       //försöker omvandla priset till ett tal
                      nyttPris = Double.parseDouble(nyttPrisStr);
                   } catch(NumberFormatException e) {
                       JOptionPane.showMessageDialog(null, "Pris måste vara en siffra.");
                       return;
                       
                   }
                   //uppdatera produktens namn och pris med sql-fråga 
                   String updateFraga = "UPDATE produkt SET namn = '" + nyttNamn + "', Pris = " + nyttPris + "WHERE ProduktID = " + produktID;
                   
                   //skicka frågan till databasen
                   idb.update(updateFraga);
                   //bekräftelse till användaren
                   JOptionPane.showMessageDialog(null,"Modellen har anpassats.");
                   
                   } catch (InfException e) {
                       //felhantering om något går fel vid databasuppdatering
                         JOptionPane.showMessageDialog(null, "Fel vid anpassning: " + e.getMessage() );
                    }
               

   
    }//GEN-LAST:event_btnAnpassaActionPerformed

    private void tfNyBeskrivningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNyBeskrivningActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNyBeskrivningActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnpassaLagerfordaModeller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnpassaLagerfordaModeller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnpassaLagerfordaModeller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnpassaLagerfordaModeller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new AnpassaLagerfordaModeller().setVisible(true);
            }
        });
    
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnpassa;
    private javax.swing.JComboBox<String> comboModeller;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField tfKundID;
    private javax.swing.JTextField tfNyBeskrivning;
    private javax.swing.JTextField tfPris;
    // End of variables declaration//GEN-END:variables
}