/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


package hattmakarna;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author Mohammed
 */
public class UppdateraStatusBeställning extends javax.swing.JFrame {

    private static InfDB idb;
    /**
     * Creates new form UppdateraStatusBeställning
     */
    public UppdateraStatusBeställning(InfDB idb) {
        initComponents();
        this.idb = idb;
        loadData();
        tblOrdrar.setAutoCreateRowSorter(true);
    }
    
     private void loadData() {
        try {
            String sql = "SELECT * FROM ordrar";
            ArrayList<HashMap<String, String>> result = idb.fetchRows(sql);
            for (HashMap<String, String> rad : result) {
                
                
                
                String getEpost = "SELECT Email FROM kund WHERE KundID = '" + rad.get("KundID") + "'";
                
                String kundEpost = null;
                
                try{
                    kundEpost = idb.fetchSingle(getEpost);
                } catch (InfException e){
                    lblFelmed.setText("Problem med hämta kundens epost från databasen.");
                }
                
                if (kundEpost == null){
                    lblFelmed.setText("Kunde inte hitta eposten.");
                    return;
                }
                
                
                // Gör om express 1 till sant 0 till falskt
                int express = Integer.parseInt(rad.get("express"));
                String bool_express = "0";
                
                if (express == 1){
                    bool_express = "Ja";
                } else{
                    bool_express = "Nej";
                }
                
                ((DefaultTableModel) tblOrdrar.getModel()).addRow(new Object[]{rad.get("OID"), rad.get("Status"), rad.get("Datum"), bool_express, kundEpost});
            }
        } catch (InfException e) {
           lblFelmed.setText("Problem med att hämta ordrarna från databasen.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnUppdatera = new javax.swing.JButton();
        lblFelmed = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrdrar = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Uppdatera order");

        btnUppdatera.setText("Ändra");
        btnUppdatera.setActionCommand("Uppdatera");
        btnUppdatera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUppdateraActionPerformed(evt);
            }
        });

        tblOrdrar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ordernummer", "Status", "Datum", "Express", "Kundkontakt"
            }
        ));
        tblOrdrar.setRowSorter(tblOrdrar.getRowSorter());
        jScrollPane1.setViewportView(tblOrdrar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblFelmed)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUppdatera)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUppdatera)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFelmed)
                        .addGap(59, 59, 59))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(33, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUppdateraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUppdateraActionPerformed
        // TODO add your handling code here:
        int row = tblOrdrar.getSelectedRow();
    if (row != -1) {
        String OID = (String) tblOrdrar.getValueAt(row, 0);
        String status = (String) tblOrdrar.getValueAt(row, 1);
        String datum = (String) tblOrdrar.getValueAt(row, 2);
        String express = (String) tblOrdrar.getValueAt(row, 3);
        String kundepost = (String) tblOrdrar.getValueAt(row, 4);


        if (!validering.isValidDatum(datum)){
            lblFelmed.setText("Datum måste vara av formatet YYYY-MM-DD");
            return;
        }
        
        String getKundid = "SELECT Kundid FROM kund WHERE Email = '" + kundepost + "'";
        
        String dbKundid = null;
        
        try{
            dbKundid = idb.fetchSingle(getKundid);
        } catch (InfException e){
            lblFelmed.setText("Problem med att hitta kundens id i databasen.");
        }
        
        if (dbKundid == null){
            lblFelmed.setText("Kunden existerar inte.");
            return;
        }
        
        if (express.equalsIgnoreCase("Ja")){
            express = "1";
        } else{
            express = "2";
        }
        
        // nu ändrar den alla vi måste hämta radens 
        String sql = "UPDATE ordrar SET Status = '" + status + "', datum = '" + datum + "', express = '" + express + "', KundID = '" + dbKundid + "' WHERE OID = '" + OID + "'";
        try {
            idb.update(sql);  // ← rätt metod!
            ((DefaultTableModel) tblOrdrar.getModel()).setRowCount(0);
            loadData();
        } catch (InfException e) {
            e.printStackTrace();
        }
    }
        
        
        
        
        
        //  ((DefaultTableModel) tblStatistik.getModel()).addRow(new Object[]{produkt, d_antal, summa});
        
    }//GEN-LAST:event_btnUppdateraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UppdateraStatusBeställning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UppdateraStatusBeställning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UppdateraStatusBeställning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UppdateraStatusBeställning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new UppdateraStatusBeställning().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUppdatera;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFelmed;
    private javax.swing.JTable tblOrdrar;
    // End of variables declaration//GEN-END:variables
}
