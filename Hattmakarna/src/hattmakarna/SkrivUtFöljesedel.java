
package hattmakarna;
import com.lowagie.text.Document;
import com.lowagie.text.Font;
import com.lowagie.text.FontFactory;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.pdf.BaseFont;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Mohammed
 */
public class SkrivUtFöljesedel extends javax.swing.JFrame {
    private static InfDB idb;

     private static final Map<String, Map<String, String>> translations = new LinkedHashMap<>();
     static {
        // Swedish (default)
        Map<String, String> swedish = new HashMap<>();
        swedish.put("följesedel", "Följesedel");
        swedish.put("ordernummer", "Ordernummer");
        swedish.put("email", "Email");
        swedish.put("produkt", "Produkt");
        swedish.put("antal", "Antal");
        swedish.put("pris", "Pris");
        swedish.put("mottagare", "Mottagare");
        translations.put("sv", swedish);

        // English
        Map<String, String> english = new HashMap<>();
        english.put("följesedel", "Delivery Note");
        english.put("ordernummer", "Order Number");
        english.put("email", "Email");
        english.put("produkt", "Product");
        english.put("antal", "Quantity");
        english.put("pris", "Price");
        english.put("mottagare", "Recipient");
        translations.put("en", english);

        // French
        Map<String, String> french = new HashMap<>();
        french.put("följesedel", "Bon de Livraison");
        french.put("ordernummer", "Numéro de Commande");
        french.put("email", "Email");
        french.put("produkt", "Produit");
        french.put("antal", "Quantité");
        french.put("pris", "Prix");
        french.put("mottagare", "Destinataire");
        translations.put("fr", french);

        // Chinese (Simplified)
        Map<String, String> chinese = new HashMap<>();
        chinese.put("följesedel", "送货单");
        chinese.put("ordernummer", "订单号");
        chinese.put("email", "电子邮件");
        chinese.put("produkt", "产品");
        chinese.put("antal", "数量");
        chinese.put("pris", "价格");
        chinese.put("mottagare", "收件人");
        translations.put("cn", chinese);
     }
     
    
    /**
     * Creates new form SkrivUtFöljesedel
     */
    public SkrivUtFöljesedel(InfDB idb) {
        initComponents();
        this.idb = idb;
        addSpråk();
    }
    
    private void addSpråk(){
         for (String language : translations.keySet()) {
            CmbSpråk.addItem(language);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfOrdernr = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        CmbSpråk = new javax.swing.JComboBox<>();
        btnSkrivut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Följesedel");

        jLabel2.setText("Ordernummer");

        jLabel3.setText("Språk");

        btnSkrivut.setText("Skriv ut");
        btnSkrivut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkrivutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfOrdernr, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CmbSpråk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 344, Short.MAX_VALUE)
                                .addComponent(btnSkrivut)))))
                .addGap(66, 66, 66))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfOrdernr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CmbSpråk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSkrivut)))
                .addContainerGap(209, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSkrivutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkrivutActionPerformed
        // TODO add your handling code here:
        String hämtaSpråk = (String) CmbSpråk.getSelectedItem();
        
        Map<String, String> languageDict = translations.get(hämtaSpråk);
        
        
       
        String ordernr = tfOrdernr.getText();
        
        String getOrder = "SELECT OID, Datum, KundID  FROM ordrar";
        
        HashMap<String, String> orderLista = new HashMap<>();
        
        try{
            orderLista = idb.fetchRow(getOrder);
        } catch (InfException e){
            JOptionPane.showMessageDialog(this, "Problem vid hämtning av order från databasen: " + e.getMessage());
        }
        
        String getprisAntal = "SELECT försäljning.produktID, produkt.Namn, produkt.pris, antal FROM försäljning "
                + "JOIN produkt on försäljning.produktID = produkt.produktID "
                + "WHERE OID = '" + orderLista.get("OID") + "'";
        
        ArrayList<HashMap<String, String>> prisAntal = new ArrayList<>();
        
        try{
            prisAntal = idb.fetchRows(getprisAntal);
        } catch (InfException e){
            JOptionPane.showMessageDialog(this,"1" + e.getMessage());
        }
        
        String getKundInfo = "SELECT förnamn, efternamn, email FROM kund "
                + "JOIN ordrar ON kund.kundID = ordrar.kundID "
                + "WHERE ordrar.oid = '" + orderLista.get("OID") + "'";
        
        HashMap<String, String> KundInfo = new HashMap<>();
        
        try{
            KundInfo = idb.fetchRow(getKundInfo);
        } catch (InfException e){
            JOptionPane.showMessageDialog(this, "2" + e.getMessage());
        }
        
        // Lagra info
        HashMap<String, ArrayList<String>> produkter_priser = new HashMap<>();
        
        for (HashMap<String, String> rad : prisAntal){
            ArrayList<String> enLista = new ArrayList<>();
            
            enLista.add(rad.get("pris"));
            enLista.add(rad.get("antal"));
            
            produkter_priser.put(rad.get("ProduktID"), enLista);
        }
        
        
        
        HashMap<String, String> words = new HashMap<>();
        
        words.put("följesedel", "Följesedel");
        words.put("ordernummer", "Ordernummer");
        words.put("email", "Email");
        words.put("produkt", "Produkt");
        words.put("antal", "Antal");
        words.put("pris", "Pris");
        words.put("mottagare", "Mottagare");
        
        for (String enKey : words.keySet()){
            if (languageDict.containsKey(enKey)){
                words.put(enKey, languageDict.get(enKey));
            }
        }
        

       
        
        
          // Lägg in allt i en pdf
        try {
            // Skapa ett nytt dokument
            Document document = new Document();
            
            Font headerFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 24);
            Font bodyFont = FontFactory.getFont(FontFactory.HELVETICA, 18);
            
            if (hämtaSpråk.equalsIgnoreCase("cn")){
                
                BaseFont bfChinese = BaseFont.createFont("STSong-Light", "UniGB-UCS2-H", BaseFont.NOT_EMBEDDED);
                Font chineseFont = new Font(bfChinese, 18, Font.NORMAL);
                Font chineseHeader = new Font(bfChinese, 24, Font.NORMAL);
                headerFont = chineseHeader;
                bodyFont = chineseFont;
            }

            // Ange var du vill spara PDF-filen
            String path = System.getProperty("user.home") + "/Desktop/följesedel.pdf";
            PdfWriter.getInstance(document, new FileOutputStream(path));

            // Öppna dokumentet för att börja skriva
            document.open();

            // Lägg till innehållet
            document.add(new Paragraph(words.get("följesedel") + ":", headerFont));
            document.add(new Paragraph("--------------------------", bodyFont));
            document.add(new Paragraph(words.get("ordernummer")+ ":" + orderLista.get("OID"), bodyFont));
            document.add(new Paragraph(words.get("email") + " "+ KundInfo.get("Email"), bodyFont));
            
            
            for (Map.Entry<String, ArrayList<String>> entry : produkter_priser.entrySet()){
                String key = entry.getKey();
                ArrayList<String> values = entry.getValue();
                
                PdfPTable table = new PdfPTable(3); // 3 columns
                table.setWidthPercentage(100); // Optional: table spans full width

                table.addCell(new Phrase(words.get("produkt") + " " + key, bodyFont)
                );
                table.addCell(new Phrase(words.get("antal") + ": "+ values.get(0) , bodyFont));
                table.addCell(new Phrase(words.get("pris") + ": " + values.get(1), bodyFont));

                document.add(table);
            }
            
            


            document.add(new Paragraph(words.get("mottagare") + ": " + KundInfo.get("Förnamn") + " " + KundInfo.get("Efternamn"), bodyFont));

            // Stäng dokumentet
            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

       
        
    }//GEN-LAST:event_btnSkrivutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SkrivUtFöljesedel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SkrivUtFöljesedel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SkrivUtFöljesedel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SkrivUtFöljesedel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new SkrivUtFöljesedel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CmbSpråk;
    private javax.swing.JButton btnSkrivut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField tfOrdernr;
    // End of variables declaration//GEN-END:variables
}
