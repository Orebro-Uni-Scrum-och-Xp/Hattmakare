/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package hattmakarna;

    
    import java.util.ArrayList;
    import java.util.HashMap;
    import javax.swing.table.DefaultTableModel;
    import oru.inf.InfDB;
    import oru.inf.InfException;
/**
 *
 * @author seansiik
 */
public class UppdateraLagerfördaHattar extends javax.swing.JFrame {

    
    
    
        private static InfDB idb; 

    /**
     * Creates new form UppdateraLagerfördaHattar
     */
    public UppdateraLagerfördaHattar(InfDB idb) {
        initComponents();
        this.idb = idb;
        loadData();
        tableLagerfördaHattar.setAutoCreateRowSorter(true);
    
    }
    
    private void loadData() {
        try {
            String sql = "SELECT LagerfördaHattar.LagerfördID, Produkt.Namn, Produkt.pris, LagerfördaHattar.Antal "
                       + "FROM LagerfördaHattar "
                       + "JOIN Produkt ON LagerfördaHattar.ProduktID = Produkt.ProduktID";
            ArrayList<HashMap<String, String>> result = idb.fetchRows(sql);

            DefaultTableModel model = (DefaultTableModel) tableLagerfördaHattar.getModel();
            model.setRowCount(0);

            for (HashMap<String, String> rad : result) {
                model.addRow(new Object[]{
                    rad.get("LagerfördID"),
                    rad.get("Namn"),
                    rad.get("Antal"),
                    rad.get("pris"),
                });
            }
        } catch (InfException e) {
            lblFelmed.setText("Fel vid hämtning av lagerförda hattar.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnUppdatera = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableLagerfördaHattar = new javax.swing.JTable();
        lblFelmed = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfNyttAntal = new javax.swing.JTextField();
        tfNyttPris = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        BtnUppdatera.setText("Uppdatera");
        BtnUppdatera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUppdateraActionPerformed(evt);
            }
        });

        jLabel1.setText("Uppdatera Lagerförda Hattar");

        tableLagerfördaHattar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ProduktID", "Namn", "Antal", "Pris"
            }
        ));
        jScrollPane1.setViewportView(tableLagerfördaHattar);
        if (tableLagerfördaHattar.getColumnModel().getColumnCount() > 0) {
            tableLagerfördaHattar.getColumnModel().getColumn(0).setMinWidth(0);
            tableLagerfördaHattar.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableLagerfördaHattar.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        jLabel2.setText("Pris");

        jLabel3.setText("Antal");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(tfNyttAntal, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfNyttPris, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addComponent(BtnUppdatera)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(lblFelmed, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfNyttAntal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfNyttPris, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BtnUppdatera))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lblFelmed, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(204, 204, 204)))
                .addGap(0, 81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnUppdateraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUppdateraActionPerformed
         int row = tableLagerfördaHattar.getSelectedRow();
         if (row != -1) {
            String lagerfördID = tableLagerfördaHattar.getValueAt(row, 0).toString();
            String nyttAntalStr = tfNyttAntal.getText();
            String nyttPrisStr = tfNyttPris.getText();

            boolean ändratNågot = false;
            

            try {
            // Uppdatera endast pris om det är ifyllt
              if (!nyttPrisStr.isEmpty()) {
                double nyttPris = Double.parseDouble(nyttPrisStr);
                String produktIDSql = "SELECT ProduktID FROM LagerfördaHattar WHERE LagerfördID =  '" + lagerfördID + "'";
                String produktID = idb.fetchSingle(produktIDSql);
                String updateProduktSql = "UPDATE Produkt SET pris = " + nyttPris + " WHERE ProduktID = " + produktID;
                idb.update(updateProduktSql);
                ändratNågot = true;
                }

              
               
                // Uppdatera endast antal om det är ifyllt
            if (!nyttAntalStr.isEmpty()) {
                int nyttAntal = Integer.parseInt(nyttAntalStr);
                String updateLagerSql = "UPDATE LagerfördaHattar SET Antal = " + nyttAntal + " WHERE LagerfördID = '" + lagerfördID + "'";
                idb.update(updateLagerSql);
                ändratNågot = true;
            }

            if (ändratNågot) {
                lblFelmed.setText("Uppdatering lyckades!");
                tfNyttPris.setText("");
                tfNyttAntal.setText("");
                loadData();
                
                
              
                lblFelmed.setText("Uppdatering lyckades!");
                tfNyttPris.setText("");
                tfNyttAntal.setText("");
                loadData();
                
                } else {
                lblFelmed.setText("Fyll i pris och/eller antal för att uppdatera.");
            }
                

            } catch (InfException e) {
                lblFelmed.setText("Fel vid uppdatering: " + e.getMessage());
            }
        } else {
            lblFelmed.setText("Välj en rad att ändra.");
        }
    
    }//GEN-LAST:event_BtnUppdateraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UppdateraLagerfördaHattar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UppdateraLagerfördaHattar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UppdateraLagerfördaHattar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UppdateraLagerfördaHattar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
               // new UppdateraLagerfördaHattar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton BtnUppdatera;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFelmed;
    private javax.swing.JTable tableLagerfördaHattar;
    private javax.swing.JTextField tfNyttAntal;
    private javax.swing.JTextField tfNyttPris;
    // End of variables declaration//GEN-END:variables
}
